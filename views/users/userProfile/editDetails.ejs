<%- include('../partials/users/userHeader') %>

    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Edit Profile</h4>
                        <div class="breadcrumb__links">
                            <a href="/">Home</a>
                            <a href="/userProfile">User Profile</a>
                            <span>Edit Details</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->

    <div class="container my-5 border p-5 rounded rounded-5 spad shadow-lg">
        <h2 class="pb-3">Edit Details</h2>
        <!-- <form action="/editUserProfile/<%= user._id %>" method="POST"> -->
        <form id="editProfileForm">
            <div class="row col-lg-12">
                <div class="column col-lg-6">
                    <div class="form-group">
                        <label for="name">Username</label>
                        <input type="text" name="name" id="name" class="form-control shadow " oninput="handleChange('name')" value="<%= user.name %>">
                        <div class="text-danger mb-1" id="errorName">
                            <span></span>
                        </div>

                    </div>
                    <div class="form-group">
                        <label for="phone">Phone</label>
                        <input type="text" name="phone" id="phone" class="form-control shadow" oninput="handleChange('phone')"
                            value="<%= user.phone %>">
                        <div class="text-danger mb-1" id="errorPhone">
                            <span></span>
                        </div>
                    </div>

                </div>
                <div class="column col-lg-6">
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" name="email" id="email" class="form-control shadow"
                            style="cursor: not-allowed;" value="<%= user.email %>" disabled>
                    </div>
                </div>
            </div>
            <div class="text-center col-lg-12">
                <button type="button" onclick="editProfileForm()" class="btn btn-primary mt-3 col-lg-6 shadow">Update
                    Profile</button>
            </div>
        </form>
    </div>
    <div class="m-5">
        <br>
    </div>



    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


    <script>



        const nameid = document.getElementById("name")
        const phoneid = document.getElementById("phone")
        const errorName = document.getElementById("errorName")
        const errorPhone = document.getElementById("errorPhone")


        function handleChange(input){
            console.log('sdfghjk');
            if(input==='name'){
                nameid.style.border="1px solid black"
                errorName.style.display = "none";
                errorName.innerHTML = ""

            }else if(input==="phone"){
                phoneid.style.border="1px solid black"
                errorPhone.style.display = "none";
                errorPhone.innerHTML = ""

            }
        }

        function nameValidateChecking(e) {
            const nameval = nameid.value;
            const namepattern = /^[A-Za-z\s]+$/;
            if (nameval.trim() === "") {
                errorName.style.display = "block";
                errorName.innerHTML = "Please enter a valid name"
                nameid.style.border = "2px solid red"
            } else if (!namepattern.test(nameval)) {
                errorName.style.display = "block";
                errorName.innerHTML = "Name can only contain alphabets and spaces"
                nameid.style.border = "2px solid red"
            } else {
                errorName.style.display = "none";
                errorName.innerHTML = ""
            }
        }

        function phoneValidateChecking(e) {
            const phoneval = phoneid.value;
            if (phoneval.trim() === "") {
                errorPhone.style.display = "block"
                errorPhone.innerHTML = "Enter valid phone number"
                phoneid.style.border = "2px solid red"
            }
            else if (isNaN(phoneval)) {
                errorPhone.style.display = "block"
                errorPhone.innerHTML = "Characters not allowed"
                phoneid.style.border = "2px solid red"
            } else if (phoneval.length > 10 || phoneval.length < 10) {
                errorPhone.style.display = "block"
                errorPhone.innerHTML = "Enter  10 digit"
                phoneid.style.border = "2px solid red"
            }
            else {
                errorPhone.style.display = "none";
                errorPhone.innerHTML = "";
            }
        }


        async function editProfileForm() {
            nameValidateChecking();
            phoneValidateChecking();

            if (
                !nameid || !phoneid || !errorName || !errorPhone
            ) {
                console.error("One or more elements not found.")
            }
            if (
                errorName.innerHTML || errorPhone.innerHTML
            ) {
                return

            }
            const userId = "<%= user._id %>";
            const formData = {
                name: document.getElementById('name').value,
                phone: document.getElementById('phone').value,
            };


            try {
                const response = await axios.post(`/editUserProfile/${userId}`, formData);

                if (response.status === 200) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Profile updated successfully!',
                        icon: 'success',
                        timer: 1000,
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = '/userProfile';
                    });
                }
            } catch (error) {
                if (error.response && error.response.data.error) {
                    Swal.fire({
                        timer: 1200,
                        title: 'Error!',
                        text: error.response.data.error,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'An unexpected error occurred. Please try again later.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            }
        };
    </script>


    <%- include('../partials/users/footer') %>