<%- include('../partials/users/userHeader') %>

    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Check Out</h4>
                        <div class="breadcrumb__links">
                            <a href="/">Home</a>
                            <a href="/loadCartPage">cart</a>
                            <span>Check Out</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->

    <!-- Checkout Section Begin -->
    <section class="checkout spad">
        <div class="container">
            <% if (products.length===0) { %>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="continue__btn">
                            <h3 class="mb-5">There is nothing in this page.</h3>
                            <a href="/shoppage">Continue Shopping</a>
                        </div>
                    </div>
                </div>
                <% }else{ %>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="cart__discount col-9">
                                <h6>Discount codes</h6>
                                <% if (discountApplied) { %>
                                    <!-- Display applied coupon -->
                                    <p>Coupon Applied: <b> <%= couponCode %></b> - ₹<%= couponDiscount %>
                                                    <button type="button" onclick="window.location.href='/checkoutPage'" class="btn btn-danger btn-sm ml-3">Remove Coupon</button>
                                    </p>
                                    <% } else { %>
                                        <form action="/checkoutPage" method="post">
                                            <input type="text" name="couponCode" placeholder="Coupon code"
                                                value="<%= couponCode %>">
                                            <button type="submit">Apply</button>
                                        </form>

                                        <div class="text-danger h5 pt-2" id="couponError">
                                            <span></span>
                                        </div>
                                        <% } %>
                            </div>

                            <!-- Display available coupons -->
                            <div class="available-coupons ml-3">
                                <h6>Available Coupons</h6>
                                <% if (coupons && coupons.length> 0) { %>
                                    <ul class="coupon-list">
                                        <% coupons.forEach(coupon=> { %>
                                            <li>
                                                <strong>
                                                    <%= coupon.code %>
                                                </strong> - Save ₹<%= coupon.offerPrice %> on orders above ₹<%=
                                                        coupon.minimumPrice %>
                                                        (Expires on <%= new Date(coupon.expireOn).toLocaleDateString()
                                                            %>)
                                            </li>
                                            <% }); %>
                                    </ul>
                                    <% } else { %>
                                        <p>No available coupons.</p>
                                        <% } %>
                                        
                            </div>
                           

                                <!-- Address Selection Section -->
                                <div class=" p-4 rounded mt-5 col-10">
                                    <% if (addresses.length===0) { %>
                                        <p>No addresses found. Please add one to place an order.</p>
                                        <button class="btn btn-success"
                                            onclick="window.location.href='/loadAddAddressPage'">Add
                                            Address</button>
                                        <% } else { %>
                                            <button class="btn btn-dark rounded-0 py-2 "
                                                onclick="window.location.href='/loadAddAddressPage'">Add Another
                                                Address</button>
                                            <% addresses.forEach((address, index)=> { %>
                                                <div
                                                    class="address_item border my-3 p-3 rounded-0 <%= address.isActive ? 'border-success' : 'border-dark' %> d-flex justify-content-between align-items-start">
                                                    <div class="address_info w-100">
                                                        <div class="d-flex justify-content-between">
                                                            <div>
                                                                <input type="radio" name="selectedAddress"
                                                                    id="address-<%= index %>" value="<%= address._id %>"
                                                                    <%=address.isActive ? 'checked' : '' %>
                                                                onchange="selectAddress('<%= address._id %>')">
                                                                    <label for="address-<%= index %>"
                                                                        class="<%= address.isActive ? 'text-success h6' : '' %>">
                                                                        <%= address.addressType %>
                                                                            <%= address.isActive ? ' (Primary Address)'
                                                                                : '' %>
                                                                    </label>
                                                            </div>
                                                            <button class="btn btn-dark rounded-0 mb-1 btn-sm"
                                                                onclick="window.location.href='/loadEditAddressPage?id=<%= address._id %>'">Edit</button>
                                                        </div>
                                                        <p class="mb-1"><strong>Name:</strong>
                                                            <%= address.name %> &nbsp; <strong>Phone:</strong>
                                                                <%= address.phone %> , <%= address.altPhone %>
                                                        </p>
                                                        <p class="mb-1">
                                                            <%= address.locality %>, <%= address.city %>, <%=
                                                                        address.landMark %>,
                                                                        <%= address.state %>, <%= address.pincode %>
                                                        </p>
                                                    </div>
                                                </div>
                                                <% }); %>

                                                    <% } %>
                                </div>
                                <hr>
                                <!-- End Address Selection Section -->


                        </div>

                        <div class="col-lg-6 col-md-6">
                            <div class="checkout__order">

                                <h4 class="order__title">Your order</h4>
                                <div class="checkout__order__products">Product <span>Total</span></div>
                                <ul class="checkout__total__products">



                                    <% products.forEach((product,id)=> { %>
                                        <li>
                                            <%= id+1 %> . <%= product.productName %> ( <label id="product-size">
                                                        <%= product.size %>
                                                    </label> ) * <label id="product-quantity">
                                                        <%= product.quantity %>
                                                    </label>
                                                    <span id="total-price-<%= product._id %>">₹<%= product.totalPrice %>
                                                            <span class="d-none" id="variationID">
                                                                <%= product.variationID %>
                                                            </span>
                                                            <span class="d-none" id="productID">
                                                                <%= product.productId %>
                                                            </span>
                                                    </span>
                                        </li>
                                        <% }); %>
                                </ul>
                                <ul class="checkout__total__all">
                                    <li>Discount Price <span id="offerDiscount">-₹ <%= totalOfferDiscount %>
                                        </span>
                                    </li>
                                    <li>Delivery Charges <span>Free Delivery</span></li>
                                    <hr>
                                    <li>Subtotal <span id="cart-subtotal">₹<%= (products.reduce((total, product)=>
                                                total
                                                +
                                                product.totalPrice, -totalOfferDiscount)).toFixed(2)
                                                %></span></li>

                                    <li>Tax (10%) <span id="cart-tax">₹ <%= tax %></span></li>
                                    <li>Coupon Applied <span id="couponDiscount">-₹<%= couponDiscount %></span></li>
                                    <hr>
                                    <li>Total <span id="cart-total">₹<%= (products.reduce((total, product)=>
                                                total +
                                                product.totalPrice, tax -totalOfferDiscount-couponDiscount)).toFixed(2)
                                                %></span></li>
                                </ul>


                                <div class="checkout__input__checkbox">
                                    <label for="payment-COD">
                                        Cash On Delivery
                                        <input type="radio" id="payment-COD" name="payment-method" checked>
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="checkout__input__checkbox">
                                    <label for="payment-RazorPay">
                                        Online
                                        <input type="radio" id="payment-RazorPay" name="payment-method">
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="checkout__input__checkbox">
                                    <label for="payment-Wallet">
                                        Wallet (Balance: ₹<%= walletBalance.toFixed(2) %>)
                                            <input type="radio" id="payment-Wallet" name="payment-method">
                                            <span class="checkmark"></span>
                                    </label>
                                </div>
                                <!-- <div class="checkout__input__checkbox">
                                    <label for="payment-card">
                                        Credit/Debit cards
                                        <input type="radio" id="payment-card" name="payment-method">
                                        <span class="checkmark"></span>
                                    </label>
                                </div> -->
                                <button type="button" class="site-btn" onclick="placeOrder()"
                                    id="placeOrderButton">PLACE ORDER</button>

                                <% } %>

                            </div>
                        </div>
                    </div>
                    </form>
        </div>
        </div>
    </section>
    <!-- Checkout Section End -->

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
        const url = window.location.search.substring(1, 6)
        const msg = window.location.search.substring(7).replace(/%20/g, ' ')
        if (url === 'error') {
            const spanMsg = document.getElementById('couponError').querySelector('span');
            spanMsg.innerText = msg;
        }


        function gatherCheckoutData() {
            const orderedItems = [];
            document.querySelectorAll('.checkout__total__products li').forEach(item => {
                const productId = item.querySelector('#productID')?.textContent.trim() // Extract product ID from span id
                const quantity = parseInt(item.querySelector('#product-quantity')?.textContent || 1, 10); // Default to 1 if not found
                const price = parseFloat(item.querySelector('span').innerText.replace('₹', ''));
                const variationID = item.querySelector('#variationID')?.textContent.trim()
                const productSize = item.querySelector('#product-size')?.textContent.trim()
                orderedItems.push({ productId, quantity, price, productSize, variationID });
            });


            const subtotal = parseFloat(document.querySelector('#cart-subtotal').innerText.replace('₹', ''));
            const tax = parseFloat(document.querySelector('#cart-tax').innerText.replace('₹', ''));
            const totalPrice = parseFloat(document.querySelector('#cart-total').innerText.replace('₹', ''));
            const selectedAddressId = document.querySelector('input[name="selectedAddress"]:checked')?.value;
            const couponApplied= '<%= discountApplied %>'
            const couponDiscount =  parseFloat(document.querySelector('#couponDiscount').innerText.replace('-₹', ''));
            const discount = parseFloat('<%= totalOfferDiscount %>')
            if (selectedAddressId == undefined) {
                return Swal.fire({
                    title: 'Select an address!!!',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                }).then(() => location.reload())
            }
            const paymentMethod = document.querySelector('input[name="payment-method"]:checked')?.id.split('-')[1];
            return {
                orderedItems,//
                subtotal,
                tax,
                totalPrice,
                selectedAddressId,
                paymentMethod,//
                discount,
                couponApplied,//
                couponDiscount
            };
        }

        async function placeOrder() {
            const orderData = await gatherCheckoutData();
            // console.log(orderData)
            const paymentMethod = document.querySelector('input[name="payment-method"]:checked')?.id.split('-')[1];

            if (paymentMethod === 'RazorPay') {
                const razorpayOrder = await axios.post('/create-razorpay-order', orderData);

                if (razorpayOrder.data.success) {
                    const options = {
                        key: razorpayOrder.data.key_id,
                        amount: razorpayOrder.data.order.amount,
                        currency: "INR",
                        name: "Luxe Scents",
                        image: "/img/favicon.png",
                        description: "Order Payment",
                        order_id: razorpayOrder.data.order.id, // Razorpay Order ID
                        handler: function (response) {
                            handlePaymentSuccess(response.razorpay_payment_id, razorpayOrder.data.order.id, orderData);
                        },
                        prefill: {
                            name: razorpayOrder.data.user,
                            // email: razorpayOrder.data.user.email,
                            // contact: razorpayOrder.data.user.phone
                        },
                        theme: {
                            color: "#3399cc"
                        }
                    };
                    const rzp = new Razorpay(options);
                    rzp.on('payment failed', function (response) {
                        Swal.fire({
                            title: 'Error!',
                            text: 'Payment Failed . Please try again.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    })
                    rzp.open();
                }
            } else if (paymentMethod === 'COD') {
                if (orderData.totalPrice > 1000) {
                    return Swal.fire({
                        text: 'Orders above ₹1000 cannot be placed using Cash on Delivery. Please choose a different payment method.',
                        icon: 'warning',
                        confirmButtonText: 'OK'
                    })
                }

                axios.post('/placeOrder', orderData)
                    .then(response => {
                        if (response.data.success) {
                            Swal.fire({
                                title: 'Order Success!',
                                text: 'Your order has been placed successfully!',
                                icon: 'success',
                                timer: 2000,
                                showConfirmButton: false,
                            }).then(() => {
                                window.location.href = `/orderSuccess?orderId=${response.data.data.orderId}`;

                            })
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: 'Failed to place order. Please try again.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error placing order:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while placing your order. Please try again.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
            } else if (paymentMethod === 'Wallet') {
                const walletBalance = '<%= walletBalance.toFixed(2) %>'
                if (orderData.totalPrice > walletBalance) {
                    Swal.fire({
                        text: 'Insufficient wallet balance. Please try another payment method.',
                        icon: 'warning',
                        confirmButtonText: 'OK'
                    })
                } else {
                    Swal.fire({
                        title: 'Confirm Order',
                        html: `<h5>Your wallet balance: <strong>${walletBalance}</strong></h5>
                               <h5>Total price: <strong>${orderData.totalPrice}</strong></h5>
                               <h5>Remaining balance after order: <strong>${(walletBalance - orderData.totalPrice)}</strong></h5><br>
                               <h5>Do you want to proceed with the payment using your wallet?</h5>`,
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, place order',
                        cancelButtonText: 'No, cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            axios.post('/placeOrder', orderData)
                                .then(response => {
                                    if (response.data.success) {
                                        Swal.fire({
                                            title: 'Order Success!',
                                            text: 'Your order has been placed successfully!',
                                            icon: 'success',
                                            timer: 2000,
                                            showConfirmButton: false,
                                        }).then(() => {
                                            window.location.href = `/orderSuccess?orderId=${response.data.data.orderId}`;

                                        })
                                    } else {
                                        Swal.fire({
                                            title: 'Error!',
                                            text: 'Failed to place order. Please try again.',
                                            icon: 'error',
                                            confirmButtonText: 'OK'
                                        });
                                    }
                                })
                                .catch(error => {
                                    console.error('Error placing order:', error);
                                    Swal.fire({
                                        title: 'Error!',
                                        text: 'An error occurred while placing your order. Please try again.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                });
                        }
                    });

                }

            }
        }



        async function handlePaymentSuccess(paymentId, razorpayOrderId, orderData) {
            try {
                axios.post('/placeOrder', orderData)
                    .then(async res => {
                        const orderId = res.data.data.orderId
                        const response = await axios.post('/payment-success', {
                            paymentId,
                            razorpayOrderId,
                            orderId
                        });

                        if (response.data.success) {
                            window.location.href = `/orderSuccess?orderId=${response.data.data.orderId}`;
                        } else {
                            Swal.fire('Payment Failed', response.data.message, 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error placing order:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while placing your order. Please try again.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
            } catch (error) {
                console.error('Payment handling error:', error);
                Swal.fire('Error', 'There was an error processing the payment.', 'error');
            }
        }


    </script>

    <%- include('../partials/users/userFooter') %>