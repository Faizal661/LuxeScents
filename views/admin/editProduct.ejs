<%- include("../../views/partials/admin/header") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
        <style>
            .col-md-3 {
                padding: 20px;
                border: 1px solid #ddd;
                border-radius: 10px;
                margin: 10px;
            }

            .form-label {
                margin-bottom: 8px;
            }

            .form-control {
                width: 100%;
                padding: 8px;
                margin-bottom: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                box-sizing: border-box;
            }

            .d-grid {
                margin-top: 20px;
            }

            .btn-primary {
                background-color: #007bff;
                color: #fff;
                border: 1px solid #007bff;
                border-radius: 5px;
                padding: 10px 20px;
                cursor: pointer;
            }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
            }

            .pagination-container {
                text-align: center;
            }

            .pagination {
                display: inline-block;
            }

            .pagination a,
            .pagination .current-page {
                display: inline-block;
                padding: 5px 10px;
                margin: 0 2px;
                border: 1px solid #ddd;
                text-decoration: none;
                color: #333;
            }

            .pagination a:hover {
                background-color: #f5f5f5;
            }

            .error-message {
                color: red;
            }

            tr,
            td,
            th {
                border: 1px solid #333;

            }
        </style>
    </head>

    
<body>
    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Edit Product</h2>
            </div>
        </div>

        <div class="card shadow">
            <div class="card-body">
                <form method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data"
                    onsubmit="return handleFormSubmit(event)">
                    <div class="row"> 
                        <div class="col-md-6">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Name</label>
                                <input type="text" name="productName" placeholder="Type here" class="shadow form-control"
                                    id="product_name" value="<%= product.productName %>" />
                                <div id="name-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" name="description" class="shadow form-control" id="descriptionId" rows="3"><%= product.description %></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Brand</label>
                                <select name="brands" class="form-select shadow form-control">
                                    <% brands.forEach(brand => { %>
                                        <option value="<%= brand._id %>" ><%= brand.brandName %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Category</label>
                                <select name="category" class="form-select shadow form-control">
                                    <% categories.forEach(category => { %>
                                        <option value="<%= category._id %>" ><%= category.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Regular Price</label>
                                <input type="number" name="regularPrice" id="regularPriceId" placeholder="Type here"
                                    class="form-control shadow" value="<%= product.regularPrice %>" />
                                <div id="regularPrice-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Sale Price</label>
                                <input type="number" name="salePrice" id="salePriceId" placeholder="Type here"
                                    class="form-control shadow" value="<%= product.salePrice %>" />
                                <div id="salePrice-error" class="error-message"></div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="mb-4">
                                <label class="form-label">Gender</label>
                                <select name="gender" class="form-select shadow form-control">
                                    <option value="Men" <%= product.gender === 'Men' ? 'selected' : '' %>>Men</option>
                                    <option value="Women" <%= product.gender === 'Women' ? 'selected' : '' %>>Women</option>
                                    <option value="Unisex" <%= product.gender === 'Unisex' ? 'selected' : '' %>>Unisex</option>
                                </select>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Sizes</label>
                                <div class="d-flex">
                                    <% const sizes = ['25ml', '50ml', '75ml', '100ml', '150ml']; %>
                                    <% sizes.forEach(size => { %>
                                        <div class="form-check">
                                            <input type="checkbox" name="size" value="<%= size %>" class="form-check-inline" id="size-<%= size %>"  />
                                            <label class="form-check-label" for="size-<%= size %>"><%= size %></label>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Quantity</label>
                                <input type="number" name="quantity" placeholder="Type here" id="quantityId"
                                    class="form-control shadow" value="<%= product.quantity %>" />
                                <div id="quantity-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Product Images</label>
                                <input type="file" name="productImages" class="form-control shadow" id="productImages"
                                    multiple onchange="previewImages(event)" />
                                <div id="images-error" class="error-message"></div>
                                <div id="imagePreview" class="d-flex flex-wrap mt-3">
                                    <% product.productImages.forEach(image => { %>
                                        <img src="<%= image %>" class="img-thumbnail" style="max-width: 100px; margin-right: 10px;" />
                                    <% }); %>
                                </div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Status</label>
                                <select name="status" class="form-select shadow form-control">
                                    <option value="Available" <%= product.status === 'Available' ? 'selected' : '' %>>Available</option>
                                    <option value="Out of Stock" <%= product.status === 'Out of Stock' ? 'selected' : '' %>>Out of Stock</option>
                                    <option value="Discontinued" <%= product.status === 'Discontinued' ? 'selected' : '' %>>Discontinued</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="d-grid mt-4">
                        <button class="btn btn-primary btn-lg" type="submit">Update Product</button>
                    </div>
                </form>
            </div>
        </div>
    </section>



        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script>
            function handleFormSubmit(event) {

                event.preventDefault();
              

                if (!validateForm()) {
                    console.log("Form validation failed");
                    return;
                }

                const formData = new FormData();
                const formElements = event.target.elements;

                formData.append('productName', formElements['productName'].value);
                formData.append('description', formElements['description'].value);
                formData.append('quantity', formElements['quantity'].value);
                formData.append('regularPrice', formElements['regularPrice'].value);
                formData.append('salePrice', formElements['salePrice'].value);
                formData.append('gender', formElements['gender'].value);
                formData.append('status', formElements['status'].value);
                formData.append('brands', formElements['brands'].value);
                formData.append('category', formElements['category'].value);


                const sizes = Array.from(document.querySelectorAll('input[name="size"]:checked')).map(cb => cb.value);
                sizes.forEach(size => formData.append('size', size));


                const files = formElements['productImages'].files;
                // console.log(files);
                for (let i = 0; i < files.length; i++) {
                    formData.append('productImages', files[i]);
                }

                fetch('/admin/editProduct/<%= product._id %>', {
                    method: 'POST',
                    body: formData
                    // headers: {
                    //     'content-type': 'application/json'
                    // },
                    // body: JSON.stringify({
                    //     name, description, quantity, regularPrice, salePrice
                    // })

                })
                    // .then(response => {
                    //     if (!response.ok) {
                    //         return response.json().then(err => {
                    //             throw new Error(err.error);
                    //         })
                    //     }
                    //     return response.json();
                    // })
                    // .then(data => {
                    //     location.reload();
                    // })

                    .then(response => {
                        if (response.ok) {
                            return response.json().then(data => {
                                Swal.fire({
                                    icon: 'success',
                                    title: "Success",
                                    text: "product Updated successfully",
                                    timer:2000
                                }).then(() => {
                                    window.location.href = "/admin/products";
                                });
                            });
                        } else {
                            return response.json().then(err => {
                                throw new Error(err.error);
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            icon: 'error',
                            title: "Oops",
                            text: error.message || "An error occurred while updating the product"
                        });
                    });


            }

            function validateForm() {
                clearErrorMessage();
                const name = document.getElementsByName("productName")[0].value.trim();
                const description = document.getElementById("descriptionId").value.trim();

                const quantityInput = document.getElementById("quantityId").value.trim();
                const regularPriceInput = document.getElementById("regularPriceId").value.trim();
                const salePriceInput = document.getElementById("salePriceId").value.trim();

                const quantity = quantityInput === "" ? NaN : parseFloat(quantityInput);
                const regularPrice = regularPriceInput === "" ? NaN : parseFloat(regularPriceInput);
                const salePrice = salePriceInput === "" ? NaN : parseFloat(salePriceInput);


                console.log(quantity, salePrice, regularPrice)
                let isValid = true;

                if (name == "") {
                    displayErrorMessage("name-error", "Please enter a name")
                    isValid = false

                } else if (!/^[a-zA-Z\s]+$/.test(name)) {
                    displayErrorMessage("name-error", "Product name should contain only aplphabetic characters")
                    isValid = false
                }
                if (description == "") {
                    displayErrorMessage("description-error", "Please enter a description")
                    isValid = false
                }

                if (isNaN(quantity)) {
                    displayErrorMessage("quantity-error", "Please enter Stock of the product");
                    isValid = false;
                } else if (quantity < 0) {
                    displayErrorMessage("quantity-error", "Stock quantity can't be negative");
                    isValid = false;
                }



                if (isNaN(regularPrice)) {
                    displayErrorMessage("regularPrice-error", "Please enter Regular Price");
                    isValid = false;
                } else if (regularPrice <= 0) {
                    displayErrorMessage("regularPrice-error", "Regular Price need to be a positive");
                    isValid = false;
                }

                if (isNaN(salePrice)) {
                    displayErrorMessage("salePrice-error", "Please enter Sale Price");
                    isValid = false;
                } else if (salePrice <= 0) {
                    displayErrorMessage("salePrice-error", "Sale Price need to be a positive");
                    isValid = false;
                } else if (salePrice > regularPrice) {
                    displayErrorMessage("salePrice-error", "Sale Price must be lower than regular price");
                    isValid = false;
                }

                return isValid;
            }


            function displayErrorMessage(elementId, message) {
                var errorElement = document.getElementById(elementId)
                errorElement.innerText = message;
                errorElement.style.display = "block";
            }

            function clearErrorMessage() {
                var errorElements = document.getElementsByClassName("error-message")
                Array.from(errorElements).forEach((element) => {
                    element.innerText = "";
                    element.style.display = "none"
                })

            }


        </script>
        <script>
            function previewImages(event) {
                const fileInput = event.target;
                const previewContainer = document.getElementById('imagePreview');
                previewContainer.innerHTML = ''; // Clear previous previews

                const files = fileInput.files;
                for (const file of files) {
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            const img = document.createElement('img');
                            img.src = e.target.result;
                            img.classList.add('img-thumbnail');
                            img.style.maxWidth = '100px';
                            img.style.marginRight = '10px';
                            previewContainer.appendChild(img);
                        }
                        reader.readAsDataURL(file);
                    }
                }
            }
        </script>

        <%- include("../../views/partials/admin/footer") %>